"""Add inward, jobs, and standards tables

Revision ID: e72c1ae00b5b
Revises: 
Create Date: 2025-08-31 19:24:51.698295

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e72c1ae00b5b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('contact_person', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    op.create_table('standards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nomenclature', sa.String(length=500), nullable=False),
    sa.Column('manufacturer', sa.String(length=255), nullable=True),
    sa.Column('model_serial_no', sa.String(length=255), nullable=True),
    sa.Column('uncertainty', sa.DECIMAL(precision=15, scale=10), nullable=False),
    sa.Column('accuracy', sa.String(length=100), nullable=True),
    sa.Column('resolution', sa.DECIMAL(precision=15, scale=10), nullable=True),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('range_min', sa.DECIMAL(precision=15, scale=4), nullable=True),
    sa.Column('range_max', sa.DECIMAL(precision=15, scale=4), nullable=True),
    sa.Column('certificate_no', sa.String(length=255), nullable=True),
    sa.Column('calibration_valid_upto', sa.Date(), nullable=False),
    sa.Column('traceable_to_lab', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_expired', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_standards_id'), 'standards', ['id'], unique=False)
    op.create_table('srf',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('srf_no', sa.String(length=100), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('contact_person', sa.String(length=255), nullable=True),
    sa.Column('date_received', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('SUBMITTED', 'UNDER_REVIEW', 'ACCEPTED', 'INWARD_COMPLETED', 'IN_PROGRESS', 'COMPLETED', name='srfstatus'), nullable=True),
    sa.Column('priority', sa.String(length=50), nullable=True),
    sa.Column('special_instructions', sa.Text(), nullable=True),
    sa.Column('nextage_contract_reference', sa.String(length=255), nullable=True),
    sa.Column('calibration_frequency', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('srf_no')
    )
    op.create_index(op.f('ix_srf_id'), 'srf', ['id'], unique=False)
    op.create_table('srf_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('srf_id', sa.Integer(), nullable=False),
    sa.Column('sl_no', sa.Integer(), nullable=False),
    sa.Column('equip_desc', sa.String(length=500), nullable=False),
    sa.Column('make', sa.String(length=255), nullable=True),
    sa.Column('model', sa.String(length=255), nullable=True),
    sa.Column('serial_no', sa.String(length=255), nullable=True),
    sa.Column('range_text', sa.String(length=255), nullable=True),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('calibration_points', sa.String(length=100), nullable=True),
    sa.Column('calibration_mode', sa.String(length=100), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['srf_id'], ['srf.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_srf_items_id'), 'srf_items', ['id'], unique=False)
    op.create_table('inward',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('srf_item_id', sa.Integer(), nullable=False),
    sa.Column('nepl_id', sa.String(length=100), nullable=False),
    sa.Column('inward_date', sa.Date(), nullable=False),
    sa.Column('customer_dc_no', sa.String(length=255), nullable=True),
    sa.Column('customer_dc_date', sa.Date(), nullable=True),
    sa.Column('condition_on_receipt', sa.String(length=100), nullable=True),
    sa.Column('visual_inspection_notes', sa.Text(), nullable=True),
    sa.Column('damage_remarks', sa.Text(), nullable=True),
    sa.Column('photos', sa.JSON(), nullable=True),
    sa.Column('received_by', sa.String(length=255), nullable=True),
    sa.Column('supplier', sa.String(length=255), nullable=True),
    sa.Column('quantity_received', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('RECEIVED', 'INSPECTION_COMPLETE', 'READY_FOR_CALIBRATION', 'IN_CALIBRATION', 'CALIBRATION_COMPLETE', 'READY_FOR_DISPATCH', 'DISPATCHED', name='inwardstatus'), nullable=True),
    sa.Column('barcode', sa.String(length=255), nullable=True),
    sa.Column('out_dc', sa.String(length=255), nullable=True),
    sa.Column('in_dc', sa.String(length=255), nullable=True),
    sa.Column('dispatching_dc', sa.String(length=255), nullable=True),
    sa.Column('courier_details', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['srf_item_id'], ['srf_items.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nepl_id')
    )
    op.create_index(op.f('ix_inward_id'), 'inward', ['id'], unique=False)
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inward_id', sa.Integer(), nullable=False),
    sa.Column('job_number', sa.String(length=100), nullable=False),
    sa.Column('nepl_work_id', sa.String(length=100), nullable=True),
    sa.Column('calibration_type', sa.String(length=100), nullable=True),
    sa.Column('calibration_method', sa.String(length=255), nullable=True),
    sa.Column('measurement_points', sa.JSON(), nullable=True),
    sa.Column('temp_before', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('temp_after', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('humidity_before', sa.DECIMAL(precision=5, scale=4), nullable=True),
    sa.Column('humidity_after', sa.DECIMAL(precision=5, scale=4), nullable=True),
    sa.Column('calibration_status', sa.String(length=100), nullable=True),
    sa.Column('calibration_date', sa.Date(), nullable=True),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('certificate_status', sa.String(length=100), nullable=True),
    sa.Column('invoice_no', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['inward_id'], ['inward.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('job_number')
    )
    op.create_index(op.f('ix_jobs_id'), 'jobs', ['id'], unique=False)
    op.create_table('job_standards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('standard_id', sa.Integer(), nullable=False),
    sa.Column('standard_sequence', sa.Integer(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('usage_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['standard_id'], ['standards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_standards_id'), 'job_standards', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_job_standards_id'), table_name='job_standards')
    op.drop_table('job_standards')
    op.drop_index(op.f('ix_jobs_id'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_index(op.f('ix_inward_id'), table_name='inward')
    op.drop_table('inward')
    op.drop_index(op.f('ix_srf_items_id'), table_name='srf_items')
    op.drop_table('srf_items')
    op.drop_index(op.f('ix_srf_id'), table_name='srf')
    op.drop_table('srf')
    op.drop_index(op.f('ix_standards_id'), table_name='standards')
    op.drop_table('standards')
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.drop_table('customers')
    # ### end Alembic commands ###
