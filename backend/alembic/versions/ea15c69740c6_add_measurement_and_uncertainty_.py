"""Add measurement and uncertainty calculation tables

Revision ID: ea15c69740c6
Revises: 82c26a13c474
Create Date: 2025-09-01 20:53:52.997783

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ea15c69740c6'
down_revision: Union[str, None] = '82c26a13c474'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('certificates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('certificate_number', sa.String(length=255), nullable=False),
    sa.Column('ulr_number', sa.String(length=255), nullable=True),
    sa.Column('revision_number', sa.Integer(), nullable=True),
    sa.Column('certificate_type', sa.String(length=20), nullable=True),
    sa.Column('issue_date', sa.Date(), nullable=False),
    sa.Column('calibration_date', sa.Date(), nullable=False),
    sa.Column('recommended_due_date', sa.Date(), nullable=True),
    sa.Column('template_used', sa.String(length=255), nullable=True),
    sa.Column('certificate_data', sa.JSON(), nullable=True),
    sa.Column('pdf_content', sa.LargeBinary(), nullable=True),
    sa.Column('password_protected', sa.Boolean(), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('digital_signature', sa.Text(), nullable=True),
    sa.Column('watermark_applied', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('reviewed_by', sa.String(length=255), nullable=True),
    sa.Column('approved_by', sa.String(length=255), nullable=True),
    sa.Column('delivery_method', sa.String(length=100), nullable=True),
    sa.Column('delivered_at', sa.Date(), nullable=True),
    sa.Column('delivery_confirmation', sa.Boolean(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('certificate_number')
    )
    op.create_index(op.f('ix_certificates_id'), 'certificates', ['id'], unique=False)
    op.create_table('deviation_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('deviation_number', sa.String(length=100), nullable=False),
    sa.Column('deviation_type', sa.String(length=100), nullable=True),
    sa.Column('severity', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('root_cause_analysis', sa.Text(), nullable=True),
    sa.Column('affected_measurements', sa.JSON(), nullable=True),
    sa.Column('technical_impact', sa.Text(), nullable=True),
    sa.Column('customer_impact', sa.Text(), nullable=True),
    sa.Column('recommendations', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('identified_by', sa.String(length=255), nullable=True),
    sa.Column('reviewed_by', sa.String(length=255), nullable=True),
    sa.Column('approved_by', sa.String(length=255), nullable=True),
    sa.Column('client_notified_at', sa.DateTime(), nullable=True),
    sa.Column('client_notification_method', sa.String(length=100), nullable=True),
    sa.Column('client_decision', sa.String(length=50), nullable=True),
    sa.Column('client_decision_date', sa.DateTime(), nullable=True),
    sa.Column('client_comments', sa.Text(), nullable=True),
    sa.Column('resolution_actions', sa.Text(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_by', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('deviation_number')
    )
    op.create_index(op.f('ix_deviation_reports_id'), 'deviation_reports', ['id'], unique=False)
    op.add_column('inward', sa.Column('dispatching_date', sa.Date(), nullable=True))
    op.add_column('jobs', sa.Column('calibration_procedure', sa.String(length=255), nullable=True))
    op.add_column('jobs', sa.Column('planned_start_date', sa.Date(), nullable=True))
    op.add_column('jobs', sa.Column('planned_completion_date', sa.Date(), nullable=True))
    op.add_column('jobs', sa.Column('actual_start_date', sa.Date(), nullable=True))
    op.add_column('jobs', sa.Column('actual_completion_date', sa.Date(), nullable=True))
    op.add_column('jobs', sa.Column('environmental_conditions_acceptable', sa.Boolean(), nullable=True))
    op.add_column('jobs', sa.Column('environmental_notes', sa.Text(), nullable=True))
    op.add_column('jobs', sa.Column('status', sa.String(length=50), nullable=True))
    op.add_column('jobs', sa.Column('assigned_technician', sa.String(length=255), nullable=True))
    op.add_column('jobs', sa.Column('reviewed_by', sa.String(length=255), nullable=True))
    op.add_column('jobs', sa.Column('approved_by', sa.String(length=255), nullable=True))
    op.add_column('jobs', sa.Column('certificate_number', sa.String(length=255), nullable=True))
    op.add_column('jobs', sa.Column('overall_result', sa.String(length=50), nullable=True))
    op.add_column('jobs', sa.Column('deviation_required', sa.Boolean(), nullable=True))
    op.add_column('jobs', sa.Column('deviation_approved', sa.Boolean(), nullable=True))
    op.add_column('jobs', sa.Column('priority', sa.String(length=50), nullable=True))
    op.add_column('jobs', sa.Column('special_instructions', sa.Text(), nullable=True))
    op.add_column('jobs', sa.Column('customer_requirements', sa.JSON(), nullable=True))
    op.add_column('jobs', sa.Column('measurement_template_id', sa.Integer(), nullable=True))
    op.add_column('jobs', sa.Column('measurement_plan', sa.JSON(), nullable=True))
    op.create_foreign_key(None, 'jobs', 'measurement_templates', ['measurement_template_id'], ['id'])
    op.drop_column('jobs', 'calibration_status')
    op.alter_column('srf_items', 'calibration_points',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=True)
    op.alter_column('srf_items', 'calibration_mode',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=True)
    op.add_column('uncertainty_calculations', sa.Column('job_id', sa.Integer(), nullable=True))
    op.alter_column('uncertainty_calculations', 'measurement_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_foreign_key(None, 'uncertainty_calculations', 'jobs', ['job_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'uncertainty_calculations', type_='foreignkey')
    op.alter_column('uncertainty_calculations', 'measurement_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('uncertainty_calculations', 'job_id')
    op.alter_column('srf_items', 'calibration_mode',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
    op.alter_column('srf_items', 'calibration_points',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
    op.add_column('jobs', sa.Column('calibration_status', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'jobs', type_='foreignkey')
    op.drop_column('jobs', 'measurement_plan')
    op.drop_column('jobs', 'measurement_template_id')
    op.drop_column('jobs', 'customer_requirements')
    op.drop_column('jobs', 'special_instructions')
    op.drop_column('jobs', 'priority')
    op.drop_column('jobs', 'deviation_approved')
    op.drop_column('jobs', 'deviation_required')
    op.drop_column('jobs', 'overall_result')
    op.drop_column('jobs', 'certificate_number')
    op.drop_column('jobs', 'approved_by')
    op.drop_column('jobs', 'reviewed_by')
    op.drop_column('jobs', 'assigned_technician')
    op.drop_column('jobs', 'status')
    op.drop_column('jobs', 'environmental_notes')
    op.drop_column('jobs', 'environmental_conditions_acceptable')
    op.drop_column('jobs', 'actual_completion_date')
    op.drop_column('jobs', 'actual_start_date')
    op.drop_column('jobs', 'planned_completion_date')
    op.drop_column('jobs', 'planned_start_date')
    op.drop_column('jobs', 'calibration_procedure')
    op.drop_column('inward', 'dispatching_date')
    op.drop_index(op.f('ix_deviation_reports_id'), table_name='deviation_reports')
    op.drop_table('deviation_reports')
    op.drop_index(op.f('ix_certificates_id'), table_name='certificates')
    op.drop_table('certificates')
    # ### end Alembic commands ###
