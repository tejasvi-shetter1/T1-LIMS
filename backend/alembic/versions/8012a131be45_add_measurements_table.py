"""Add measurements table

Revision ID: 8012a131be45
Revises: e72c1ae00b5b
Create Date: 2025-08-31 19:35:35.397280

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8012a131be45'
down_revision: Union[str, None] = 'e72c1ae00b5b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('measurement_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_name', sa.String(length=255), nullable=False),
    sa.Column('equipment_type', sa.String(length=100), nullable=False),
    sa.Column('calibration_method', sa.String(length=255), nullable=True),
    sa.Column('measurement_points', sa.JSON(), nullable=False),
    sa.Column('readings_per_point', sa.Integer(), nullable=True),
    sa.Column('required_measurements', sa.JSON(), nullable=False),
    sa.Column('environmental_limits', sa.JSON(), nullable=True),
    sa.Column('formula_pack', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_measurement_templates_id'), 'measurement_templates', ['id'], unique=False)
    op.create_table('measurements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('measurement_type', sa.String(length=50), nullable=False),
    sa.Column('measurement_plan_name', sa.String(length=255), nullable=True),
    sa.Column('calibration_date', sa.Date(), nullable=False),
    sa.Column('technician', sa.String(length=255), nullable=True),
    sa.Column('temp_before', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('temp_after', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('humidity_before', sa.DECIMAL(precision=5, scale=4), nullable=True),
    sa.Column('humidity_after', sa.DECIMAL(precision=5, scale=4), nullable=True),
    sa.Column('measurement_data', sa.JSON(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('pass_fail_status', sa.String(length=50), nullable=True),
    sa.Column('deviation_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_measurements_id'), 'measurements', ['id'], unique=False)
    op.create_table('uncertainty_calculations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('measurement_id', sa.Integer(), nullable=False),
    sa.Column('set_torque', sa.DECIMAL(precision=15, scale=4), nullable=False),
    sa.Column('uncertainty_pressure_gauge', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('resolution_input_pressure', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('uncertainty_standard', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('uncertainty_resolution', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('uncertainty_reproducibility', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('uncertainty_output_drive', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('uncertainty_interface', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('uncertainty_loading_point', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('uncertainty_repeatability', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('combined_uncertainty', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('coverage_factor', sa.Integer(), nullable=True),
    sa.Column('expanded_uncertainty_percent', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('expanded_uncertainty_absolute', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('mean_measurement_error', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('max_calibration_device_error', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('cmc_value', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('cmc_absolute', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('measurement_uncertainty_interval', sa.DECIMAL(precision=20, scale=15), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['measurement_id'], ['measurements.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_uncertainty_calculations_id'), 'uncertainty_calculations', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_uncertainty_calculations_id'), table_name='uncertainty_calculations')
    op.drop_table('uncertainty_calculations')
    op.drop_index(op.f('ix_measurements_id'), table_name='measurements')
    op.drop_table('measurements')
    op.drop_index(op.f('ix_measurement_templates_id'), table_name='measurement_templates')
    op.drop_table('measurement_templates')
    # ### end Alembic commands ###
